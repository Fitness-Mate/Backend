name: Backend CD
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 저장소 Checkout
        uses: actions/checkout@v3
        
#       - name: application.properties 생성
#         run: |
#           echo spring.datasource.url=${{ secrets.DATASOURCE_URL }} >>./src/main/resources/application.properties
#           echo spring.datasource.username=${{ secrets.DATASOURCE_USERNAME }} >>./src/main/resources/application.properties
#           echo spring.datasource.password=${{ secrets.DATASOURCE_PASSWORD }} >>./src/main/resources/application.properties
#           echo api-key=${{ secrets.CHATGPT_API_KEY }} >>./src/main/resources/application.properties
#           echo deepl-api-key=${{ secrets.DEEPL_API_KEY }} >>./src/main/resources/application.properties

#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'adopt'
        
#       - name: 스프링부트 애플리케이션 빌드 # (1)
#         run: ./gradlew build

#       - name: 도커 이미지 빌드 # (2)
#         run: docker build -t chanhalee/fitnessmateback:latest .

#       - name: Docker Hub 로그인 # (3)
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_TOKEN }}

#       - name: Docker Hub 퍼블리시 # (4)
#         run: docker push chanhalee/fitnessmateback:latest
      - name: SSH Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_KNOWN_HOSTS }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_PEM_KEY }}
          port: 22
          script_stop: true
          script: |
            cd my-project
            npm ci
            npm run build

#       - name: Build and deploy
#         run: |
#           echo "$SSH_PEM_KEY" >> ./key.pem
#           chmod 600 ./key.pem
#           ssh -i ./key.pem -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_KNOWN_HOSTS} '~/script.sh'
#           wall "System will go down for 2 hours maintenance at 13:00 PM"
#         env:
#           SSH_USER: ${{secrets.SSH_USER}}
#           SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
#           SSH_PEM_KEY: ${{secrets.SSH_PEM_KEY}}
